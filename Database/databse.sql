-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE public.cities
(
    id integer NOT NULL,
    city_name character varying(255),
    PRIMARY KEY (id)
);

CREATE TABLE public.cv
(
    cv_id integer NOT NULL,
    foreword character varying(255),
    github_link character varying(255),
    linkedin_link character varying(255),
    job_seeker_id integer,
    PRIMARY KEY (cv_id)
);

CREATE TABLE public.cv_foreign_lng
(
    cv_cv_id integer NOT NULL,
    foreign_lng_foreign_language_id integer NOT NULL
);

CREATE TABLE public.cv_job_exp
(
    cv_cv_id integer NOT NULL,
    job_exp_job_experience_id integer NOT NULL
);

CREATE TABLE public.cv_programming_lng
(
    cv_cv_id integer NOT NULL,
    programming_lng_programming_language_id integer NOT NULL
);

CREATE TABLE public.cv_school_cv
(
    cv_cv_id integer NOT NULL,
    school_cv_school_cv_id integer NOT NULL
);

CREATE TABLE public.email_verification
(
    id integer NOT NULL,
    email_bool boolean,
    email_id integer,
    PRIMARY KEY (id)
);

CREATE TABLE public.employers
(
    company_name character varying(255),
    password_repeat character varying(255),
    phone_number character varying(255),
    website character varying(255),
    user_id integer NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.foreign_language
(
    foreign_language_id integer NOT NULL,
    language_level character varying(255),
    language_name character varying(255),
    PRIMARY KEY (foreign_language_id)
);

CREATE TABLE public.hrms_staff_verification
(
    id integer NOT NULL,
    hrms_bool boolean,
    hrms_id integer,
    PRIMARY KEY (id)
);

CREATE TABLE public.hrms_staffs
(
    hrms_staff_code character varying(255),
    hrms_staff_last_name character varying(255),
    hrms_staff_name character varying(255),
    user_id integer NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.job_advertisement
(
    id integer NOT NULL,
    application_deadline character varying(255),
    city_name character varying(255),
    employer_name character varying(255),
    hrms_staff_confirmation boolean,
    is_active boolean,
    job_description character varying(255),
    job_position_name character varying(255),
    max_salary integer,
    min_salary integer,
    number_of_open_positions integer,
    part_or_full_time character varying(255),
    release_date character varying(255),
    type_of_work character varying(255),
    PRIMARY KEY (id)
);

CREATE TABLE public.job_experience
(
    job_experience_id integer NOT NULL,
    business_name character varying(255),
    finishing_date character varying(255),
    "position" character varying(255),
    starting_date character varying(255),
    PRIMARY KEY (job_experience_id)
);

CREATE TABLE public.job_positions
(
    id integer NOT NULL,
    job_position_name character varying(255),
    PRIMARY KEY (id)
);

CREATE TABLE public.job_seekers
(
    birth_year integer,
    first_name character varying(255),
    identity_number character varying(255),
    last_name character varying(255),
    password_repeat character varying(255),
    user_id integer NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.mernis_verification
(
    id integer NOT NULL,
    mernis_bool boolean,
    mernis_id integer,
    PRIMARY KEY (id)
);

CREATE TABLE public.programming_language
(
    programming_language_id integer NOT NULL,
    language_name character varying(255),
    technology character varying(255),
    PRIMARY KEY (programming_language_id)
);

CREATE TABLE public.school_cv
(
    school_cv_id integer NOT NULL,
    department character varying(255),
    finishing_date character varying(255),
    school_name character varying(255),
    starting_date character varying(255),
    PRIMARY KEY (school_cv_id)
);

CREATE TABLE public.users
(
    id integer NOT NULL,
    email character varying(255),
    password character varying(255),
    PRIMARY KEY (id)
);

ALTER TABLE public.cv
    ADD FOREIGN KEY (job_seeker_id)
    REFERENCES public.job_seekers (user_id)
    NOT VALID;


ALTER TABLE public.cv_foreign_lng
    ADD FOREIGN KEY (foreign_lng_foreign_language_id)
    REFERENCES public.foreign_language (foreign_language_id)
    NOT VALID;


ALTER TABLE public.cv_foreign_lng
    ADD FOREIGN KEY (cv_cv_id)
    REFERENCES public.cv (cv_id)
    NOT VALID;


ALTER TABLE public.cv_job_exp
    ADD FOREIGN KEY (job_exp_job_experience_id)
    REFERENCES public.job_experience (job_experience_id)
    NOT VALID;


ALTER TABLE public.cv_job_exp
    ADD FOREIGN KEY (cv_cv_id)
    REFERENCES public.cv (cv_id)
    NOT VALID;


ALTER TABLE public.cv_programming_lng
    ADD FOREIGN KEY (programming_lng_programming_language_id)
    REFERENCES public.programming_language (programming_language_id)
    NOT VALID;


ALTER TABLE public.cv_programming_lng
    ADD FOREIGN KEY (cv_cv_id)
    REFERENCES public.cv (cv_id)
    NOT VALID;


ALTER TABLE public.cv_school_cv
    ADD FOREIGN KEY (school_cv_school_cv_id)
    REFERENCES public.school_cv (school_cv_id)
    NOT VALID;


ALTER TABLE public.cv_school_cv
    ADD FOREIGN KEY (cv_cv_id)
    REFERENCES public.cv (cv_id)
    NOT VALID;


ALTER TABLE public.employers
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.hrms_staffs
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.job_seekers
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;

END;